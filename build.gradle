import org.gradle.internal.jvm.Jvm

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

group 'ru.nucodelabs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
    platformName = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
}

application {
    mainModule = 'ru.nucodelabs.gem'
    mainClass = 'ru.nucodelabs.gem.App'
}

javafx {
    version = "17"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation("eu.hansolo.fx:charts:17.0.1")
    implementation("org.openjfx:javafx-base:${platformName}")
    implementation("org.openjfx:javafx-controls:${platformName}")
    implementation("org.openjfx:javafx-fxml:${platformName}")
}

test {
    useJUnitPlatform()
    systemProperty "java.library.path", file("${projectDir}/lib").absolutePath
}

task forwardSolver(type: Exec) {
    workingDir "orig/ForwardSolver"
    doFirst {
        mkdir "${projectDir}/lib"
    }
    if (osdetector.os == "osx") {
        commandLine "/usr/bin/clang",
                "${workingDir}/forwardsolver.cpp",
                "${workingDir}/VESER.C",
                "-O3",
                "-arch",
                "x86_64",
                "-fPIC",
                "-dynamiclib",
                "-I",
                "${workingDir}",
                "-I",
                "${Jvm.current().javaHome}/include",
                "-I",
                "${Jvm.current().javaHome}/include/darwin",
                "-o",
                "${projectDir}/lib/libforwardsolver.dylib"
    } else if (osdetector.os == "linux") {
        commandLine "/usr/bin/gcc",
                "${workingDir}/forwardsolver.cpp",
                "${workingDir}/VESER.C",
                "-O3",
                "-fPIC",
                "-shared",
                "-I",
                "${workingDir}",
                "-I",
                "${Jvm.current().javaHome}/include",
                "-I",
                "${Jvm.current().javaHome}/include/linux",
                "-o",
                "${projectDir}/lib/libforwardsolver.so"
    } else {
        commandLine "C:\\Program Files\\LLVM\\bin\\clang.exe",
                "${workingDir}\\forwardsolver.cpp",
                "${workingDir}\\VESER.C",
                "-O3",
                "-shared",
                "-I",
                "${workingDir}",
                "-I",
                "${Jvm.current().javaHome}\\include",
                "-I",
                "${Jvm.current().javaHome}\\include\\win32",
                "-o",
                "${projectDir}\\lib\\forwardsolver.dll"
        doLast {
            file("${projectDir}/lib/forwardsolver.exp").delete()
            file("${workingDir}/lib/forwardsolver.lib").delete()
        }
    }
}

tasks.withType(JavaExec) {
    allJvmArgs = ["-Djava.library.path=${projectDir}/lib"]
    dependsOn forwardSolver
}