<?xml version="1.0" encoding="UTF-8"?>
<?language groovy?>

<?import javafx.scene.control.*?>
<?import javafx.scene.image.*?>
<?import javafx.scene.layout.*?>
<?import javafx.scene.Scene?>
<?import javafx.stage.Stage?>
<?import ru.nucodelabs.gem.view.main.UIConstantsKt?>
<Stage xmlns="http://javafx.com/javafx"
       xmlns:fx="http://javafx.com/fxml"
       maxWidth="Infinity" maxHeight="Infinity"
       fx:controller="ru.nucodelabs.gem.view.main.MainViewController"
       fx:id="root"
       width="1280"
       height="720"
       title="GEM" onShown="initShortcut()">
    <fx:script>
        import javafx.scene.input.KeyCodeCombination
        import javafx.scene.input.KeyCode
        import javafx.scene.input.KeyCombination

        def initShortcut() {
            root.scene.accelerators.put(
                    new KeyCodeCombination(KeyCode.Y, KeyCombination.SHORTCUT_DOWN),
                    { controller.redo() } as Runnable)
        }
    </fx:script>
    <icons>
        <Image url="@../../../../../img/gem.png"/>
    </icons>
    <scene>
        <Scene stylesheets="@../common.css, @Main.css">
            <VBox maxWidth="Infinity" maxHeight="Infinity">
                <MenuBar fx:id="menuBar">
                    <Menu text="%file">
                        <MenuItem text="%addPicket" onAction="#addNewPicket"/>
                        <MenuItem text="%newWindow" onAction="#newWindow" accelerator="Shift+Shortcut+N"/>
                        <MenuItem text="%openSection" fx:id="menuFileOpenSection" onAction="#openJsonSection"
                                  accelerator="Shortcut+O"/>
                        <MenuItem text="Импортировать пикет" onAction="#importJsonPicket"/>
                        <Menu text="%import">
                            <MenuItem text="EXP" fx:id="menuFileOpenEXP" onAction="#importEXP"/>
                            <MenuItem disable="${controller.noFileOpened}" text="MOD" onAction="#importMOD"/>
                        </Menu>
                        <MenuItem text="%saveSection" onAction="#saveSection" disable="${controller.noFileOpened}"
                                  accelerator="Shortcut+S"/>
                        <MenuItem text="%saveSectionAs" onAction="#saveSectionAs" disable="${controller.noFileOpened}"
                                  accelerator="Shift+Shortcut+S"/>
                        <MenuItem text="Экспортировать текущий пикет" onAction="#exportJsonPicket"/>
                        <MenuItem text="%close" onAction="#closeFile" accelerator="Shortcut+W"
                                  disable="${controller.noFileOpened}"/>
                    </Menu>
                    <Menu text="%edit">
                        <MenuItem text="%undo" onAction="#undo" accelerator="Shortcut+Z"/>
                        <MenuItem text="%redo" onAction="#redo" accelerator="Shift+Shortcut+Z"/>
                        <MenuItem text="Добавить измерение" onAction="#openAddExpData"
                                  disable="${controller.noFileOpened}"/>
                        <fx:define>
                            <fx:include fx:id="addExperimentalData" source="AddExperimentalData.fxml"/>
                        </fx:define>
                    </Menu>
                    <Menu fx:id="menuView" text="%view">
                        <CheckMenuItem fx:id="menuViewVESCurvesLegend" text="%vesLegend"/>
                        <CheckMenuItem fx:id="menuViewGraphTitles" text="%graphTitles"/>
                        <CheckMenuItem fx:id="menuViewSectionInSeparateWindow" text="%sectionInSeparateWindow"
                                       disable="${controller.noFileOpened}"/>
                    </Menu>
                    <Menu text="%help">
                        <fx:define>
                            <fx:include fx:id="authorsWindow" source="About.fxml"/>
                        </fx:define>
                        <fx:script>
                            import javafx.stage.Stage

                            def openAbout() {
                                authorsWindow as Stage
                                if (authorsWindow.owner == null) {
                                    authorsWindow.initOwner(root)
                                }
                                authorsWindow.icons.setAll(root.icons)
                                authorsWindow.show()
                            }
                        </fx:script>
                        <MenuItem text="%about" onAction="openAbout()"/>
                    </Menu>
                </MenuBar>
                <StackPane maxWidth="Infinity" maxHeight="Infinity" VBox.vgrow="ALWAYS">
                    <VBox maxWidth="Infinity" maxHeight="Infinity" fx:id="vesSectionSplitContainer" VBox.vgrow="ALWAYS">
                        <SplitPane orientation="VERTICAL" maxWidth="Infinity" maxHeight="Infinity"
                                   fx:id="vesSectionSplit">
                            <HBox fx:id="sectionContainer" maxWidth="Infinity" maxHeight="Infinity" VBox.vgrow="ALWAYS">
                                <VBox fx:id="sectionBox" HBox.hgrow="ALWAYS" VBox.vgrow="ALWAYS" maxWidth="Infinity"
                                      maxHeight="Infinity">
                                    <HBox>
                                        <HBox>
                                            <prefWidth>
                                                <UIConstantsKt fx:constant="LEFT_AXIS_WIDTH"/>
                                            </prefWidth>
                                        </HBox>
                                        <fx:include fx:id="picketsBar" source="PicketsBar.fxml" HBox.hgrow="ALWAYS"/>
                                        <HBox>
                                            <Button fx:id="addPicketBtn"
                                                    onAction="#addNewPicket" stylesheets="@PicketsBar.css"
                                                    HBox.hgrow="NEVER" contentDisplay="GRAPHIC_ONLY">
                                                <prefWidth>
                                                    <UIConstantsKt fx:constant="TOP_CHARTS_RIGHT_OFFSET"/>
                                                </prefWidth>
                                                <minWidth>
                                                    <UIConstantsKt fx:constant="TOP_CHARTS_RIGHT_OFFSET"/>
                                                </minWidth>
                                                <maxWidth>
                                                    <UIConstantsKt fx:constant="TOP_CHARTS_RIGHT_OFFSET"/>
                                                </maxWidth>
                                                <graphic>
                                                    <ImageView fitWidth="15" fitHeight="15" preserveRatio="true">
                                                        <Image url="@../../../../../img/ui_icons/add/2x/round_add_black_24dp.png"/>
                                                    </ImageView>
                                                </graphic>
                                            </Button>
                                        </HBox>
                                    </HBox>
                                    <HBox VBox.vgrow="ALWAYS" maxHeight="Infinity">
                                        <SplitPane orientation="VERTICAL" maxHeight="Infinity" maxWidth="Infinity"
                                                   HBox.hgrow="ALWAYS">
                                            <fx:include fx:id="pseudoSectionSwitcher"
                                                        source="../charts/PseudoSectionSwitcher.fxml"/>
                                            <fx:include fx:id="modelSectionSwitcher"
                                                        source="../charts/ModelSectionSwitcher.fxml"/>
                                        </SplitPane>
                                        <fx:include source="../charts/ColorAxis.fxml"/>
                                    </HBox>
                                </VBox>
                            </HBox>
                            <VBox maxWidth="Infinity"
                                  maxHeight="Infinity"
                                  VBox.vgrow="ALWAYS" fx:id="vesCurvesBox">

                                <HBox alignment="CENTER_LEFT" maxWidth="Infinity"
                                      style="-fx-background-color: WhiteSmoke; -fx-padding: 5" spacing="5">
                                    <Button styleClass="small-btns"
                                            onAction="#switchToPrevPicket"
                                            contentDisplay="GRAPHIC_ONLY">
                                        <graphic>
                                            <ImageView fitHeight="15" fitWidth="15" preserveRatio="true">
                                                <Image url="@../../../../../img/ui_icons/arrow_left/2x/round_chevron_left_black_24dp.png"/>
                                            </ImageView>
                                        </graphic>
                                    </Button>
                                    <Button styleClass="small-btns"
                                            onAction="#switchToNextPicket"
                                            contentDisplay="GRAPHIC_ONLY">
                                        <graphic>
                                            <ImageView fitHeight="15" fitWidth="15" preserveRatio="true">
                                                <Image url="@../../../../../img/ui_icons/arrow_right/2x/round_chevron_right_black_24dp.png"/>
                                            </ImageView>
                                        </graphic>
                                    </Button>
                                    <Label style="-fx-text-fill: Gray" text="${controller.vesNumber}"/>
                                    <TextField fx:id="picketName" text="-" onAction="#submitPicketName"/>
                                    <fx:include source="SmallDivider.fxml"/>
                                    <Label text="X"/>
                                    <Label text="="/>
                                    <Label fx:id="xCoordLbl" text="-"/>
                                    <Label text="m"/>
                                    <HBox HBox.hgrow="ALWAYS"/>
                                    <Label text="Z"/>
                                    <Label text="="/>
                                    <TextField promptText="Z" fx:id="picketZ" prefWidth="50" onAction="#submitZ"/>
                                    <Label text="m"/>
                                    <fx:include source="SmallDivider.fxml"/>
                                    <Label text="%offset"/>
                                    <Label text="="/>
                                    <TextField promptText="%offset" fx:id="picketOffsetX" prefWidth="50"
                                               onAction="#submitOffsetX"/>
                                    <Label text="m"/>
                                    <fx:include source="SmallDivider.fxml"/>
                                    <Button text="%inverse" onAction="#inverseSolve" fx:id="inverseBtn">
                                        <graphic>
                                            <ImageView fitWidth="15" fitHeight="15">
                                                <Image url="@../../../../../img/ui_icons/bolt/2x/round_bolt_black_24dp.png"/>
                                            </ImageView>
                                        </graphic>
                                    </Button>
                                </HBox>
                                <SplitPane dividerPositions="0.7" maxHeight="Infinity" maxWidth="Infinity"
                                           VBox.vgrow="ALWAYS">

                                    <SplitPane orientation="VERTICAL" dividerPositions="0.3" maxHeight="Infinity"
                                               VBox.vgrow="ALWAYS">
                                        <fx:include fx:id="misfitStacks" source="../charts/MisfitStacks.fxml"
                                                    VBox.vgrow="ALWAYS"/>
                                        <fx:include fx:id="vesCurves" source="../charts/VesCurves.fxml"
                                                    VBox.vgrow="ALWAYS"/>
                                    </SplitPane>
                                    <TabPane VBox.vgrow="ALWAYS" maxHeight="Infinity">
                                        <Tab text="%experimentalTable" closable="false">
                                            <fx:include fx:id="experimentalTable"
                                                        source="../tables/ExperimentalTable.fxml"/>
                                        </Tab>
                                        <Tab text="%modelTable" closable="false">
                                            <fx:include fx:id="modelTable" source="../tables/ModelTable.fxml"/>
                                        </Tab>
                                        <Tab text="Комментарии" closable="false">
                                            <TextArea fx:id="commentTextArea"/>
                                        </Tab>
                                    </TabPane>
                                </SplitPane>
                            </VBox>
                        </SplitPane>
                    </VBox>

                    <fx:include fx:id="noFileScreen" source="NoFileScreen.fxml"/>
                </StackPane>
            </VBox>
        </Scene>
    </scene>
</Stage>
